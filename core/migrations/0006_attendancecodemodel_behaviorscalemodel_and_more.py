# Generated by Django 5.2 on 2025-08-07 13:43

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ("core", "0005_sectionmodel_breakcount_sectionmodel_breakduration_and_more"),
    ]

    operations = [
        migrations.CreateModel(
            name="AttendanceCodeModel",
            fields=[
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("deleted_at", models.DateTimeField(blank=True, null=True)),
                ("deleted", models.BooleanField(default=False)),
                ("id", models.AutoField(primary_key=True, serialize=False)),
                ("code", models.CharField(max_length=10, unique=True)),
                ("description", models.CharField(max_length=255)),
                ("affectsGrade", models.BooleanField(default=False)),
            ],
            options={
                "verbose_name": "Attendance Code",
                "verbose_name_plural": "Attendance Codes",
                "db_table": "attendance_code",
                "ordering": ["code"],
            },
        ),
        migrations.CreateModel(
            name="BehaviorScaleModel",
            fields=[
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("deleted_at", models.DateTimeField(blank=True, null=True)),
                ("deleted", models.BooleanField(default=False)),
                ("id", models.AutoField(primary_key=True, serialize=False)),
                ("name", models.CharField(max_length=255, unique=True)),
                ("minScore", models.DecimalField(decimal_places=2, max_digits=5)),
                ("maxScore", models.DecimalField(decimal_places=2, max_digits=5)),
            ],
            options={
                "verbose_name": "Behavior Scale",
                "verbose_name_plural": "Behavior Scales",
                "db_table": "behavior_scale",
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="EvaluationTypeModel",
            fields=[
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("deleted_at", models.DateTimeField(blank=True, null=True)),
                ("deleted", models.BooleanField(default=False)),
                ("id", models.AutoField(primary_key=True, serialize=False)),
                ("name", models.CharField(max_length=255, unique=True)),
                ("description", models.TextField(blank=True, null=True)),
                ("weight", models.DecimalField(decimal_places=2, max_digits=5)),
            ],
            options={
                "verbose_name": "Evaluation Type",
                "verbose_name_plural": "Evaluation Types",
                "db_table": "evaluation_type",
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="GradingSystemModel",
            fields=[
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("deleted_at", models.DateTimeField(blank=True, null=True)),
                ("deleted", models.BooleanField(default=False)),
                ("id", models.AutoField(primary_key=True, serialize=False)),
                ("name", models.CharField(max_length=255, unique=True)),
                ("description", models.TextField(blank=True, null=True)),
                ("numberOfTerms", models.IntegerField()),
                (
                    "passingScore",
                    models.DecimalField(decimal_places=2, default=7.0, max_digits=5),
                ),
            ],
            options={
                "verbose_name": "Grading System",
                "verbose_name_plural": "Grading Systems",
                "db_table": "grading_system",
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="MeetingTypeModel",
            fields=[
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("deleted_at", models.DateTimeField(blank=True, null=True)),
                ("deleted", models.BooleanField(default=False)),
                ("id", models.AutoField(primary_key=True, serialize=False)),
                ("name", models.CharField(max_length=255, unique=True)),
                ("description", models.TextField(blank=True, null=True)),
            ],
            options={
                "verbose_name": "Meeting Type",
                "verbose_name_plural": "Meeting Types",
                "db_table": "meeting_type",
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="GradingTermModel",
            fields=[
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("deleted_at", models.DateTimeField(blank=True, null=True)),
                ("deleted", models.BooleanField(default=False)),
                ("id", models.AutoField(primary_key=True, serialize=False)),
                ("name", models.CharField(max_length=255)),
                ("order", models.IntegerField()),
                ("weight", models.DecimalField(decimal_places=2, max_digits=5)),
                (
                    "academicYear",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="grading_terms",
                        to="core.schoolyearmodel",
                    ),
                ),
                (
                    "gradingSystem",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="terms",
                        to="core.gradingsystemmodel",
                    ),
                ),
            ],
            options={
                "verbose_name": "Grading Term",
                "verbose_name_plural": "Grading Terms",
                "db_table": "grading_term",
                "ordering": ["order"],
            },
        ),
        migrations.CreateModel(
            name="ClassScheduleModel",
            fields=[
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("deleted_at", models.DateTimeField(blank=True, null=True)),
                ("deleted", models.BooleanField(default=False)),
                ("id", models.AutoField(primary_key=True, serialize=False)),
                (
                    "dayOfWeek",
                    models.CharField(
                        choices=[
                            ("monday", "Monday"),
                            ("tuesday", "Tuesday"),
                            ("wednesday", "Wednesday"),
                            ("thursday", "Thursday"),
                            ("friday", "Friday"),
                            ("saturday", "Saturday"),
                            ("sunday", "Sunday"),
                        ],
                        max_length=9,
                    ),
                ),
                ("startTime", models.TimeField()),
                ("endTime", models.TimeField()),
                (
                    "course",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="class_schedules",
                        to="core.coursemodel",
                    ),
                ),
                (
                    "parallel",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="class_schedules",
                        to="core.parallelmodel",
                    ),
                ),
                (
                    "schoolYear",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="class_schedules",
                        to="core.schoolyearmodel",
                    ),
                ),
                (
                    "subject",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="class_schedules",
                        to="core.subjectmodel",
                    ),
                ),
            ],
            options={
                "verbose_name": "Class Schedule",
                "verbose_name_plural": "Class Schedules",
                "db_table": "class_schedule",
                "ordering": ["dayOfWeek", "startTime"],
                "unique_together": {("parallel", "dayOfWeek", "startTime")},
            },
        ),
    ]
