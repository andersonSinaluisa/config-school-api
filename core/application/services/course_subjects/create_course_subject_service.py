


from core.domain.entities.couse_subject import CourseSubject
from core.domain.repositories.course_subject_repository import CourseSubjectRepository
from rest_framework.exceptions import ValidationError, NotFound

class CreateCourseSubjectService:
    def __init__(self, course_subject_repository:CourseSubjectRepository):
        self.course_subject_repository = course_subject_repository

    def execute(self, course_id, subject_id, hours_per_week, is_required):

        course_subject = CourseSubject(
            id=None,  # Assuming ID is auto-generated by the repository
            courseId=course_id,
            subjectId=subject_id,
            hoursPerWeek=hours_per_week,
            isRequired=is_required
        )
        if self.course_subject_repository.exist_by_course_and_subject(course_id, subject_id):
            raise ValidationError("CourseSubject with this course and subject already exists")
        return self.course_subject_repository.create(course_subject)
